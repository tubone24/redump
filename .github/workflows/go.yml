name: TestAndBuild

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        go-version: [ "1.12", "1.13", "1.14", "1.15" ]
    steps:
    - uses: actions/checkout@v3
    - name: setup Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Build
      run: go build cmd/redump/main.go
    - name: simple test
      run: go test -v ./... -count=1
    - name: test with GC pressure
      run: go test -v ./... -count=1
      env:
        GOGC: 1
#    - name: test with race detector
#      run: go test -v -race ./... -count=1

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.12
    - name: Test
      run: go test -coverprofile coverage.out -covermode atomic -v ./...
    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1.0.8
      with:
        infile: coverage.out
        outfile: coverage.lcov
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: coverage.lcov

  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.12
      - name: Build
        run: go build cmd/redump/main.go
      - name: Run benchmark
        run: |
          cd pkg/redmine
          go test -bench . | tee output1.txt
          mv output1.txt ../../
          cd ../utils
          go test -bench . | tee output2.txt
          mv output2.txt ../../
          cd ../../
          cat output1.txt output2.txt > output.txt
      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: Redump Benchmark
          tool: 'go'
          output-file-path: output.txt
          github-token: ${{ secrets.github_token }}
          comment-on-alert: true
          alert-comment-cc-users: '@tubone24'
          auto-push: true
